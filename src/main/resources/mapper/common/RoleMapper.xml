<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.phoenix.common.dao.RoleDao">

	<select id="get" resultType="com.phoenix.common.domain.RoleDO">
		select role_id, role_name, remark, create_user, create_gmt, update_gmt 
		from sys_role where role_id = #{value}
	</select>

	<select id="list" resultType="com.phoenix.common.domain.RoleDO">
		select role_id, role_name, remark, create_user, create_gmt, update_gmt 
		from sys_role
		<where>
			<if test="roleId != null and roleId != ''"> and role_id = #{roleId} </if>
			<if test="roleName != null and roleName != ''"> and role_name = #{roleName} </if>
			<if test="searchName != null and searchName != ''"> and role_name like concat('%',#{searchName},'%') </if>
			<if test="roleIds != null">
				<foreach item="roleId" collection="roleIds" open="("
					separator="," close=")">
					#{roleId}
				</foreach>
			</if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by role_id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from sys_role
		<where>
			<if test="roleId != null and roleId != ''"> and role_id = #{roleId} </if>
			<if test="roleName != null and roleName != ''"> and role_name = #{roleName} </if>
			<if test="searchName != null and searchName != ''"> and role_name like concat('%',#{searchName},'%') </if>
		</where>
	</select>

	<insert id="save"
		parameterType="com.phoenix.common.domain.RoleDO">
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
			<if test="createGmt != null">
				create_gmt,
			</if>
			<if test="updateGmt != null">
				update_gmt,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=VARCHAR},
			</if>
			<if test="createGmt != null">
				#{createGmt,jdbcType=TIMESTAMP},
			</if>
			<if test="updateGmt != null">
				#{updateGmt,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>

	<update id="update"
		parameterType="com.phoenix.common.domain.RoleDO">
		update sys_role
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=VARCHAR},
			</if>
			<if test="createGmt != null">
				create_gmt = #{createGmt,jdbcType=TIMESTAMP},
			</if>
			<if test="updateGmt != null">
				update_gmt = #{updateGmt,jdbcType=TIMESTAMP},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=VARCHAR}
	</update>

	<delete id="remove">
		delete from sys_role where role_id = #{value}
	</delete>

	<delete id="batchRemove">
		delete from sys_role where role_id in
		<foreach item="roleId" collection="array" open="("
			separator="," close=")">
			#{roleId}
		</foreach>
	</delete>

</mapper>